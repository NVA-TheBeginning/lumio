name: CI

on:
  push:
    branches: [ 'main' ]
  pull_request:


env:
  FORCE_COLOR: 1
  CI: true
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Cache turbo build setup
      uses: actions/cache@v4
      with:
        path: .turbo
        key: ${{ runner.os }}-turbo-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-turbo-

    - name: Cache bun dependencies
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-${{ matrix.bun }}-bun-${{ hashFiles('**/bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.bun }}-bun-

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Generate Prisma client
      run: bun turbo run generate

    - name: Push database schema
      run: bun turbo run db:push --env DATABASE_URL

    - name: Build
      run: bun run build

    - name: Run tests
      run: bun test

  lint:
    name: Code quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Setup Biome
      uses: biomejs/setup-biome@v2

    - name: Run Biome
      run: biome ci .
